openapi: 3.0.0
x-stoplight:
  id: g3l4hj3kekuyw
tags:
  - name: backoffice
  - name: client
  - name: tenant
info:
  title: Api
  version: '1.0'
  contact:
    name: Aikintech
    url: www.aikintech.com
    email: admin@aikintech.com
  description: Adwaso API documentaion
servers:
  - url: 'http://localhost:10010'
    description: local
paths:
  /client/auth/login:
    post:
      summary: ''
      tags:
        - client
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
        '422':
          description: Unprocessable Entity (WebDAV)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationResponse'
      operationId: auth-login
      description: Login user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
    parameters: []
  /client/auth/register:
    post:
      summary: ''
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
        '422':
          description: Unprocessable Entity (WebDAV)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationResponse'
      operationId: auth-register
      description: Register user
      tags:
        - client
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
        description: ''
    parameters: []
  /client/auth/verify-phone-number:
    post:
      summary: ''
      tags:
        - client
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyPhoneNumberResponse'
      operationId: auth-verify-phone-number
      description: Verify phone number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyPhoneNumberRequest'
    parameters: []
  /client/auth/verify-otp:
    post:
      summary: ''
      tags:
        - client
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyOtpResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
        '422':
          description: Unprocessable Entity (WebDAV)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationResponse'
      operationId: auth-verify-otp
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyOtpRequest'
      description: Verify OTP
    parameters: []
  /client/shops/get-by-subdomain:
    get:
      summary: ''
      tags:
        - client
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientShop'
      operationId: client-get-shop-by-subdomain
      description: Client get shop by subdomain
      parameters:
        - schema:
            type: string
          in: query
          name: subdomain
          required: true
  /tenant/auth/me:
    get:
      summary: ''
      tags:
        - tenant
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantAuthUser'
      operationId: tenant-get-auth-user
      description: Tenant get auth user
      security:
        - X-USER-TOKEN: []
        - X-TENANT-ID: []
    parameters: []
  /tenant/auth/update-password:
    post:
      summary: ''
      tags:
        - tenant
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
      operationId: tenant-auth-update-password
      description: Tenant update password
      security:
        - X-USER-TOKEN: []
        - X-TENANT-ID: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePasswordRequest'
    parameters: []
  /tenant/categories:
    get:
      summary: ''
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantCategoriesResponse'
      operationId: tenant-get-categories
      tags:
        - tenant
      description: Tenant get categories
      security:
        - X-USER-TOKEN: []
        - X-TENANT-ID: []
      parameters:
        - schema:
            type: integer
          in: query
          name: page
        - schema:
            type: integer
          in: query
          name: limit
        - schema:
            type: string
          in: query
          name: search
    post:
      summary: ''
      operationId: tenant-create-category
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantCategory'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
        '422':
          description: Unprocessable Entity (WebDAV)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationResponse'
      description: Tenant create category
      security:
        - X-USER-TOKEN: []
        - X-TENANT-ID: []
      tags:
        - tenant
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TenantStoreCategoryRequest'
  '/tenant/categories/{categoryId}':
    get:
      summary: ''
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantCategory'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      operationId: tenant-get-category
      tags:
        - tenant
      description: Tenant get categories
      security:
        - X-USER-TOKEN: []
        - X-TENANT-ID: []
      parameters: []
    patch:
      summary: ''
      operationId: tenant-update-category
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantCategory'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
        '422':
          description: Unprocessable Entity (WebDAV)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationResponse'
      description: Tenant update category
      security:
        - X-USER-TOKEN: []
        - X-TENANT-ID: []
      tags:
        - tenant
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TenantStoreCategoryRequest'
    parameters:
      - schema:
          type: string
        name: categoryId
        in: path
        required: true
    delete:
      summary: ''
      operationId: tenant-delete-category
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      description: Tenant delete category
      security:
        - X-USER-TOKEN: []
        - X-TENANT-ID: []
      tags:
        - tenant
  /tenant/files:
    post:
      summary: ''
      tags:
        - tenant
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileUploadResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
      operationId: tenant-upload-file
      description: Tenant upload file
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FileUploadRequest'
      security:
        - X-USER-TOKEN: []
        - X-TENANT-ID: []
    parameters: []
    delete:
      summary: ''
      operationId: tenant-delete-file
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
      description: Tenant delete file
      security:
        - X-USER-TOKEN: []
        - X-TENANT-ID: []
      parameters:
        - schema:
            type: string
          in: query
          required: true
          name: fileKey
      tags:
        - tenant
  /tenant/products:
    get:
      summary: ''
      tags:
        - tenant
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantProductsResponse'
      operationId: tenant-get-products
      description: Tenant get products
      security:
        - X-USER-TOKEN: []
        - X-TENANT-ID: []
      parameters:
        - schema:
            type: integer
          in: query
          name: page
        - schema:
            type: integer
          in: query
          name: limit
        - schema:
            type: string
          in: query
          name: search
    post:
      summary: ''
      operationId: tenant-create-product
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties: {}
      description: Tenant create product
      security:
        - X-USER-TOKEN: []
        - X-TENANT-ID: []
      tags:
        - tenant
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TenantStoreProductRequest'
        description: ''
  '/tenant/products/{productId}':
    get:
      summary: ''
      tags:
        - tenant
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantProduct'
      operationId: tenant-get-product
      description: Tenant get product
      security:
        - X-USER-TOKEN: []
        - X-TENANT-ID: []
      parameters: []
    patch:
      summary: ''
      operationId: tenant-update-product
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties: {}
      description: Tenant update product
      security:
        - X-USER-TOKEN: []
        - X-TENANT-ID: []
      tags:
        - tenant
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TenantStoreProductRequest'
        description: ''
    parameters:
      - schema:
          type: string
        name: productId
        in: path
        required: true
    delete:
      summary: ''
      operationId: tenant-delete-product
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
      description: Tenanr delete product
      security:
        - X-USER-TOKEN: []
        - X-TENANT-ID: []
      tags:
        - tenant
  /tenant/shops/update-logo:
    patch:
      summary: ''
      tags:
        - tenant
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
      operationId: tenant-update-shop-logo
      description: Tenant update shop logo
      security:
        - X-USER-TOKEN: []
        - X-TENANT-ID: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMediaRequest'
  /tenant/shops/update-details:
    patch:
      summary: ''
      tags:
        - tenant
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
      operationId: tenant-update-shop-details
      description: Tenant update shop details
      security:
        - X-USER-TOKEN: []
        - X-TENANT-ID: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateShopRequest'
    parameters: []
components:
  schemas:
    RegisterRequest:
      type: object
      x-examples: {}
      properties:
        firstName:
          type: string
        lastName:
          type: string
        phoneNumber:
          type: string
          x-stoplight:
            id: r5bqniytzxkhk
        countryCode:
          type: string
          x-stoplight:
            id: 26q1il2a6vban
        password:
          type: string
        location:
          type: string
          x-stoplight:
            id: juzcjtlvp7ju6
        dateOfBirth:
          type: string
          x-stoplight:
            id: qjrg1jwcpdv8s
        gender:
          type: string
          x-stoplight:
            id: qjrg1jwcpdv8s
          enum:
            - male
            - female
        code:
          type: string
          x-stoplight:
            id: qjrg1jwcpdv8s
        storeName:
          type: string
          x-stoplight:
            id: 9si2kfa86mmwd
        storeSubdomain:
          type: string
          x-stoplight:
            id: ny7w1nqulisx1
        storeLogoKey:
          type: string
          x-stoplight:
            id: gn5lz6jego1r9
        storeLocation:
          type: string
          x-stoplight:
            id: xqhl929ynk493
        StorePaymentMethod:
          type: string
          x-stoplight:
            id: lv5p7w9j7h7yz
        StorePaymentNumber:
          type: string
          x-stoplight:
            id: w54chfbemqa8y
      required:
        - firstName
        - lastName
        - phoneNumber
        - countryCode
        - password
        - location
        - dateOfBirth
        - gender
        - code
        - storeName
        - storeSubdomain
    LoginRequest:
      title: LoginRequest
      x-stoplight:
        id: i40gkp9t6rqw4
      type: object
      properties:
        phoneNumber:
          type: string
          x-stoplight:
            id: 2k8vv77pn4zoa
        password:
          type: string
          x-stoplight:
            id: qcjrhhbsfz42c
        countryCode:
          type: string
          x-stoplight:
            id: 383ytfek94ljy
      required:
        - phoneNumber
        - password
        - countryCode
    MessageResponse:
      title: MessageResponse
      x-stoplight:
        id: xc65yiw47su4z
      type: object
      properties:
        message:
          type: string
          x-stoplight:
            id: fz8s79lg10to6
    ValidationResponse:
      type: object
      x-examples:
        Example 1:
          errors:
            - field: phoneNumber
              reasons:
                - The phone number field is required.
            - field: countryCode
              reasons:
                - The country code field is required.
      properties:
        errors:
          type: array
          items:
            type: object
            properties:
              field:
                type: string
              reasons:
                type: array
                items:
                  type: string
            required:
              - field
              - reasons
      required:
        - errors
    VerifyPhoneNumberRequest:
      title: VerifyPhoneNumberRequest
      x-stoplight:
        id: g8nvjssjo2w90
      type: object
      properties:
        phoneNumber:
          type: string
          x-stoplight:
            id: q00v1bqes42bg
        countryCode:
          type: string
          x-stoplight:
            id: 6obc4o18fbdrk
        sendOtp:
          type: boolean
          x-stoplight:
            id: ver0297m65t7k
          default: false
        action:
          type: string
          x-stoplight:
            id: rf1lvv91mtzt9
          enum:
            - register
            - forgot_password
      required:
        - phoneNumber
        - countryCode
        - sendOtp
        - action
    VerifyOtpRequest:
      title: VerifyOtpRequest
      x-stoplight:
        id: 2jm0mwq4vidxc
      type: object
      properties:
        code:
          type: string
          x-stoplight:
            id: s1id03m43dw3q
        phoneNumber:
          type: string
          x-stoplight:
            id: 0q0o0e85pclnh
        countryCode:
          type: string
          x-stoplight:
            id: qd8y6jb6utfah
        action:
          type: string
          x-stoplight:
            id: nfzlnrq8zvbpv
          enum:
            - register
            - forgot_password
            - payment_details_change
            - payment_details_addition
      required:
        - code
        - phoneNumber
        - countryCode
        - action
    VerifyPhoneNumberResponse:
      type: object
      x-examples:
        Example 1:
          message: Phone number verified successfully.
          userId: ''
      properties:
        message:
          type: string
        userId:
          type: string
      required:
        - message
        - userId
    LoginResponse:
      type: object
      x-examples:
        Example 1:
          tokens:
            access: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3MDY5Nzg0NDgsImlhdCI6MTcwNjk3NzI0OCwiaXNzIjoiQWR3YXNvIiwic3ViIjoibTk0bjh1VkN4WDFlIiwidG9rZW5UeXBlIjoiYWNjZXNzIn0.n5stiaBiMU5_KV1yT7ht71eRX4YWzRXOBQawOwOabAI
            refresh: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3MDcwNjM2NDgsImlhdCI6MTcwNjk3NzI0OCwiaXNzIjoiQWR3YXNvIiwic3ViIjoibTk0bjh1VkN4WDFlIiwidG9rZW5UeXBlIjoicmVmcmVzaCJ9.mxcS68PSOHOYSCnb9YVO320Zay_WF8t5nkkY-7dseUY
          user:
            avatar: 'https://ui-avatars.com/api/?name=John+Doe&background=random&color=fff'
            firstName: John
            lastName: Doe
      properties:
        tokens:
          type: object
          required:
            - access
            - refresh
          properties:
            access:
              type: string
            refresh:
              type: string
        user:
          type: object
          required:
            - avatar
            - firstName
            - lastName
          properties:
            avatar:
              type: string
            firstName:
              type: string
            lastName:
              type: string
      required:
        - tokens
        - user
    TenantCategory:
      type: object
      x-examples: {}
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        published:
          type: boolean
        featured:
          type: boolean
        createdAt:
          type: string
        productsCount:
          type: integer
          x-stoplight:
            id: vpamq7xvep3hh
      required:
        - id
        - name
        - description
        - published
        - featured
        - createdAt
        - productsCount
    TenantCategoriesResponse:
      type: object
      x-examples: {}
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/TenantCategory'
        limit:
          type: integer
        page:
          type: integer
        total:
          type: integer
      required:
        - items
        - limit
        - page
        - total
    TenantStoreCategoryRequest:
      type: object
      x-examples: {}
      properties:
        name:
          type: string
        description:
          type: string
        published:
          type: boolean
        featured:
          type: boolean
      required:
        - name
        - description
        - published
        - featured
    ClientShop:
      type: object
      x-examples: {}
      properties:
        id:
          type: string
        name:
          type: string
        subdomain:
          type: string
        description:
          type: string
        meta:
          type: object
          required:
            - location
            - paymentMethod
            - paymentNumber
            - instagram
            - facebook
            - twitter
            - whatsApp
            - tikTok
            - phoneNumber
          properties:
            location:
              type: string
            paymentMethod:
              type: string
            paymentNumber:
              type: string
            instagram:
              type: string
            facebook:
              type: string
            twitter:
              type: string
            whatsApp:
              type: string
            tikTok:
              type: string
            phoneNumber:
              type: string
        logo:
          $ref: '#/components/schemas/FileUploadResponse'
      required:
        - id
        - name
        - subdomain
        - description
        - meta
        - logo
    FileUploadRequest:
      title: FileUploadRequest
      x-stoplight:
        id: xn4s75z6tzyiz
      type: object
      properties:
        file:
          type: string
          x-stoplight:
            id: jh6egob7a3sia
          format: binary
        uploadType:
          type: string
          x-stoplight:
            id: g53jwszxov8fb
          enum:
            - avatar
            - logo
            - product
      required:
        - file
        - uploadType
    FileUploadResponse:
      type: object
      x-examples: {}
      properties:
        fileKey:
          type: string
        fileURL:
          type: string
        fileId:
          type: string
          x-stoplight:
            id: fsh2u6e5p2dyp
      required:
        - fileKey
        - fileURL
        - fileId
    TenantStoreProductRequest:
      title: TenantStoreProductRequest
      x-stoplight:
        id: vec0gea8s5bq1
      type: object
      properties:
        name:
          type: string
          x-stoplight:
            id: tr9g35pw4t79g
        description:
          type: string
          x-stoplight:
            id: rheqtm3hoqget
        published:
          type: boolean
          x-stoplight:
            id: bi3uar8rti3bn
        featured:
          type: boolean
          x-stoplight:
            id: uusr73jegd3v6
        quantity:
          type: integer
          x-stoplight:
            id: cs2dg8csz6miv
        price:
          type: number
          x-stoplight:
            id: kvlmxk4fdhyr7
        discountType:
          type: string
          x-stoplight:
            id: 20hn4lnxfrcco
          enum:
            - none
            - percentage
            - fixed_price
        discountValue:
          type: number
          x-stoplight:
            id: 5w7mhnu2kz3nb
        media:
          type: array
          x-stoplight:
            id: hqdxqgtdt3082
          items:
            x-stoplight:
              id: 1my53f5o8lbtu
            type: string
        categories:
          type: array
          x-stoplight:
            id: vff6j2yqyo9t1
          items:
            x-stoplight:
              id: i55r8byr9x6ld
            type: string
      required:
        - name
        - description
        - published
        - featured
        - quantity
        - price
        - discountType
        - discountValue
        - media
        - categories
    TenantProductsResponse:
      type: object
      x-examples: {}
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/TenantProduct'
        limit:
          type: integer
        page:
          type: integer
        total:
          type: integer
      required:
        - items
        - limit
        - page
        - total
    TenantProduct:
      type: object
      x-examples:
        Example 1:
          id: CLJvND9BZrLhqw
          description: Test description for rosa shoe
          published: false
          featured: false
          price: 10000
          quantity: 1
          discountType: none
          discountValue: 0
          tags: null
          variants: null
          createdAt: '2024-02-09T20:30:18.325Z'
          media:
            - fileId: 67JrPYNOsCKYPO
              fileKey: product/QBJJEpzYWXtjy23U8pYG9hPWUdcB2QeFMtssNcPK.jpeg
              fileURL: 'http://localhost:10010/storage/product/QBJJEpzYWXtjy23U8pYG9hPWUdcB2QeFMtssNcPK.jpeg'
            - fileId: yzG2XlzazGVXDo
              fileKey: product/Yt9cdXqowEMRkTEdtVWxf6XxGpjPX3vQixHiXDZh.jpeg
              fileURL: 'http://localhost:10010/storage/product/Yt9cdXqowEMRkTEdtVWxf6XxGpjPX3vQixHiXDZh.jpeg'
          categories: null
      properties:
        id:
          type: string
        name:
          type: string
          x-stoplight:
            id: d71bbkvp3jl5m
        description:
          type: string
        published:
          type: boolean
        featured:
          type: boolean
        price:
          type: integer
        quantity:
          type: integer
        discountType:
          type: string
          enum:
            - none
            - percentage
            - fixed_price
        discountValue:
          type: integer
        tags:
          type: array
          nullable: true
          items: {}
        variants:
          type: array
          nullable: true
          items: {}
        createdAt:
          type: string
        media:
          type: array
          items:
            $ref: '#/components/schemas/FileUploadResponse'
        categories:
          type: array
          items:
            $ref: '#/components/schemas/TenantCategory'
      required:
        - id
        - name
        - description
        - published
        - featured
        - price
        - quantity
        - discountType
        - discountValue
        - tags
        - variants
        - createdAt
        - media
        - categories
    TenantAuthUser:
      type: object
      x-examples: {}
      properties:
        id:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        phoneNumber:
          type: string
        username:
          type: string
        email:
          type: string
        location:
          type: string
        gender:
          type: string
        emailVerified:
          type: boolean
        dateOfBirth:
          type: string
        meta:
          nullable: true
        createdAt:
          type: string
        avatar:
          type: string
      required:
        - id
        - firstName
        - lastName
        - phoneNumber
        - username
        - email
        - location
        - gender
        - emailVerified
        - dateOfBirth
        - meta
        - createdAt
        - avatar
    UpdatePasswordRequest:
      title: UpdatePasswordRequest
      x-stoplight:
        id: 0kju2hyx4edqh
      type: object
      properties:
        currentPassword:
          type: string
          x-stoplight:
            id: msf81aka6etu4
        newPassword:
          type: string
          x-stoplight:
            id: gg5fxsol1u41o
        confirmNewPassword:
          type: string
          x-stoplight:
            id: goyejbpb7v753
      required:
        - currentPassword
        - newPassword
        - confirmNewPassword
    UpdateMediaRequest:
      title: UpdateMediaRequest
      x-stoplight:
        id: v0m74d07mcxqy
      type: object
      properties:
        fileId:
          type: string
          x-stoplight:
            id: 8ytb90oistdca
      required:
        - fileId
    UpdateShopRequest:
      type: object
      x-examples: {}
      properties:
        name:
          type: string
        location:
          type: string
        description:
          type: string
        phoneNumber:
          type: string
        countryCode:
          type: string
        instagram:
          type: string
        facebook:
          type: string
        twitter:
          type: string
        WhatsApp:
          type: string
        tikTok:
          type: string
      required:
        - name
        - location
        - description
        - phoneNumber
        - countryCode
    VerifyOtpResponse:
      title: VerifyOtpResponse
      x-stoplight:
        id: fv7bk4yl0xo11
      type: object
      properties:
        message:
          type: string
          x-stoplight:
            id: 6i08nbwb9r0bx
        code:
          type: string
          x-stoplight:
            id: oj84q6cwo9109
      required:
        - message
        - code
  securitySchemes:
    X-API-KEY:
      name: API Key
      type: apiKey
      in: header
    X-TENANT-ID:
      name: Tenant ID
      type: apiKey
      in: header
      description: ''
    X-USER-TOKEN:
      name: User token
      type: apiKey
      in: header
